@page "/Ping"
@using NRpiMonitor.Services
@inject PingService PingService

<h3>Ping</h3>
<div class="row">
    <div class="col-md-12">
        @if (_result is null)
        {
            <p>
                Результатов пингов еще нет
            </p>
        }
        else
        {
            <div class="row">
            @foreach (var result in _result)
            {
                <div class="col-md">
                    <RadzenCard Style="margin: 3px">
                        <RadzenText TextStyle="TextStyle.Overline">Host</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1">@result.Host</RadzenText>
                        
                        <RadzenText TextStyle="TextStyle.Overline">Success / Total</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1">@result.SuccessCount.ToString() / @result.TotalCount.ToString()</RadzenText>
                        
                        <RadzenText TextStyle="TextStyle.Overline">Min, Avg, Max (ms)</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1"> @result.MinRtt.ToString("F") / @result.AvgRtt.ToString("F") / @result.MaxRtt.ToString("F")</RadzenText>
                    </RadzenCard>
                </div>
            }
            </div>
        }
    </div>
</div>
<div class="row">
    <div class="col-6">
        <RadzenButton Text="Run ping" ButtonStyle="ButtonStyle.Primary" Click="async () => await RunPing()"/>
    </div>
</div>

@code {
    private List<PingCheckResult>? _result;

    private async Task RunPing()
    {
        _result = null;
        var res = new List<PingCheckResult>();
        res.Add(await PingService.PingHost("192.168.88.1", 30));
        res.Add(await PingService.PingHost("1.1.1.1", 30));
        res.Add(await PingService.PingHost("8.8.8.8", 30));
        _result = res;
    }
}
